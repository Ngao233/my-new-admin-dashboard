{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-content\"\n};\nconst _hoisted_2 = {\n  class: \"actions\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"page-title\"\n  }, \"Quản Lý Sản Phẩm\", -1 /* CACHED */)), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Đây là trang quản lý sản phẩm. Bạn có thể xem, thêm, sửa, xóa sản phẩm tại đây.\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    class: \"btn-add\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addProduct && $options.addProduct(...args))\n  }, \"+ Thêm Sản Phẩm\"), $data.showAlert ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['alert', $data.alertType])\n  }, _toDisplayString($data.alertMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Tên Sản Phẩm\"), _createElementVNode(\"th\", null, \"Giá\"), _createElementVNode(\"th\", null, \"Danh Mục\"), _createElementVNode(\"th\", null, \"Hành Động\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: product.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(product.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatCurrency(product.price)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(product.category), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_2, [_createElementVNode(\"button\", {\n      class: \"edit\",\n      onClick: $event => $options.editProduct(product)\n    }, \"Sửa\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      class: \"delete\",\n      onClick: $event => $options.deleteProduct(product)\n    }, \"Xóa\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","addProduct","$data","showAlert","_normalizeClass","alertType","alertMessage","_Fragment","_renderList","products","product","key","id","_toDisplayString","name","formatCurrency","price","category","_hoisted_2","$event","editProduct","_hoisted_3","deleteProduct","_hoisted_4"],"sources":["C:\\admin html\\my-new-admin-dashboard\\src\\components\\ProductPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-content\">\r\n    <div class=\"page-title\">Quản Lý Sản Phẩm</div>\r\n    <p>Đây là trang quản lý sản phẩm. Bạn có thể xem, thêm, sửa, xóa sản phẩm tại đây.</p>\r\n\r\n    <button class=\"btn-add\" @click=\"addProduct\">+ Thêm Sản Phẩm</button>\r\n\r\n    <div v-if=\"showAlert\" :class=\"['alert', alertType]\">{{ alertMessage }}</div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Tên Sản Phẩm</th>\r\n          <th>Giá</th>\r\n          <th>Danh Mục</th>\r\n          <th>Hành Động</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"product in products\" :key=\"product.id\">\r\n          <td>{{ product.id }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ formatCurrency(product.price) }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td class=\"actions\">\r\n            <button class=\"edit\" @click=\"editProduct(product)\">Sửa</button>\r\n            <button class=\"delete\" @click=\"deleteProduct(product)\">Xóa</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProductPage',\r\n  data() {\r\n    return {\r\n      products: [\r\n        { id: 1, name: 'Sofa Da Hiện Đại', price: 15000000, category: 'Nội thất phòng khách' },\r\n        { id: 2, name: 'Bàn Ăn Gỗ Sồi 6 Ghế', price: 12500000, category: 'Nội thất phòng ăn' },\r\n        { id: 3, name: 'Tủ Quần Áo Gỗ Công Nghiệp', price: 7800000, category: 'Nội thất phòng ngủ' },\r\n        { id: 4, name: 'Đèn Trang Trí Để Bàn', price: 850000, category: 'Phụ kiện' },\r\n      ],\r\n      showAlert: false,\r\n      alertMessage: '',\r\n      alertType: 'alert-success' // Có thể là 'alert-success' hoặc 'alert-error'\r\n    };\r\n  },\r\n  methods: {\r\n    formatCurrency(value) {\r\n      // Định dạng tiền tệ Việt Nam Đồng\r\n      return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n    },\r\n    addProduct() {\r\n      // Logic để thêm sản phẩm\r\n      this.alertMessage = 'Chức năng thêm sản phẩm sẽ được phát triển!';\r\n      this.alertType = 'alert-info'; // Có thể dùng màu thông tin khác\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    editProduct(product) {\r\n      // Logic để sửa sản phẩm\r\n      this.alertMessage = `Bạn đang chỉnh sửa sản phẩm: \"${product.name}\" (ID: ${product.id})`;\r\n      this.alertType = 'alert-info';\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    deleteProduct(product) {\r\n      if (confirm(`Bạn có chắc chắn muốn xóa sản phẩm \"${product.name}\" không?`)) {\r\n        this.products = this.products.filter(p => p.id !== product.id);\r\n        this.alertMessage = `Đã xóa sản phẩm \"${product.name}\" thành công!`;\r\n        this.alertType = 'alert-success';\r\n        this.showAlert = true;\r\n        setTimeout(() => {\r\n          this.showAlert = false;\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ------------------------------------ */\r\n/* CSS cho trang Quản Lý Sản Phẩm (ProductPage.vue) */\r\n/* ------------------------------------ */\r\n\r\n/* Reset một số thuộc tính cơ bản */\r\n* {\r\n    box-sizing: border-box; /* Đảm bảo padding và border được tính vào chiều rộng/cao */\r\n    margin: 0; /* Xóa margin mặc định của trình duyệt */\r\n    padding: 0; /* Xóa padding mặc định của trình duyệt */\r\n}\r\n\r\n/* Lưu ý: CSS cho 'html' và 'body' thường được đặt trong một file CSS global (ví dụ: src/assets/styles/main.css) */\r\n/* Tuy nhiên, nếu bạn muốn đặt ở đây cho mục đích demo, nó vẫn sẽ hoạt động */\r\n/* Đảm bảo chiều cao đầy đủ cho html và body để các phần tử con có thể chiếm 100% chiều cao */\r\nhtml, body {\r\n    height: 100%; /* Đặt chiều cao 100% cho html và body */\r\n    overflow-x: hidden; /* Ngăn chặn scroll ngang không mong muốn */\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Font chữ hiện đại, dễ đọc */\r\n    background-color: #f4f6f9; /* Màu nền tổng thể nhẹ nhàng, khớp với Dashboard và các trang khác */\r\n    color: #333; /* Màu chữ mặc định */\r\n}\r\n\r\n/* CSS cho khối nội dung chính của trang (cái \"card\" trắng bao quanh) */\r\n\r\n/* CSS cho tiêu đề trang \"Quản Lý Sản Phẩm\" */\r\n.page-title {\r\n    font-size: 1.8em; /* Kích thước font của tiêu đề, vừa phải và dễ nhìn */\r\n    color: #ffffff; /* Màu chữ trắng, nổi bật trên nền đậm */\r\n    background-color: #5e4329; /* Màu nền nâu đậm, nhất quán với các trang quản lý khác */\r\n    text-align: center; /* Căn giữa chữ trong tiêu đề */\r\n    padding: 15px 0; /* Khoảng đệm trên dưới cho tiêu đề */\r\n    margin-bottom: 30px; /* Khoảng cách với nội dung bên dưới tiêu đề */\r\n    font-weight: 600; /* Độ đậm của chữ */\r\n    border-radius: 6px; /* Bo tròn nhẹ các góc của khối tiêu đề */\r\n}\r\n\r\n/* Kiểu dáng cho đoạn văn bản mô tả ban đầu */\r\n.page-content p {\r\n    font-size: 1.1em; /* Kích thước font của đoạn văn bản */\r\n    color: #555; /* Màu chữ xám đậm */\r\n    text-align: center; /* Căn giữa đoạn văn bản */\r\n    margin-bottom: 30px; /* Khoảng cách với các thành phần tiếp theo (nếu có) */\r\n    line-height: 1.6; /* Chiều cao dòng để văn bản dễ đọc hơn */\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* CSS cho các thành phần chính (Nút, Bảng, Alert) */\r\n/* ------------------------------------ */\r\n\r\n/* Nút thêm sản phẩm */\r\n.btn-add {\r\n    background-color: #e09f3e; /* Màu nâu cam, nhất quán với nút thêm/sửa ở các trang khác */\r\n    color: white; /* Màu chữ trắng */\r\n    padding: 10px 20px; /* Khoảng đệm bên trong nút */\r\n    border: none; /* Bỏ viền nút */\r\n    border-radius: 5px; /* Bo tròn các góc nút */\r\n    cursor: pointer; /* Thay đổi con trỏ thành bàn tay khi rê chuột */\r\n    font-size: 1em; /* Kích thước font */\r\n    font-weight: 500; /* Độ đậm của chữ */\r\n    transition: background-color 0.3s ease, transform 0.2s ease; /* Hiệu ứng chuyển động mượt mà */\r\n    margin-bottom: 25px; /* Khoảng cách với bảng (nếu có) */\r\n    display: block; /* Đảm bảo nút là block-level để có thể căn giữa */\r\n    width: fit-content; /* Chiều rộng vừa với nội dung */\r\n    margin-left: auto; /* Căn giữa nút theo chiều ngang */\r\n    margin-right: auto; /* Căn giữa nút theo chiều ngang */\r\n}\r\n\r\n.btn-add:hover {\r\n    background-color: #cc8d2d; /* Màu tối hơn khi rê chuột qua */\r\n    transform: translateY(-1px); /* Nút hơi nhích lên */\r\n}\r\n\r\n/* Hộp thông báo (alert) */\r\n.alert {\r\n    padding: 12px 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 5px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease-out;\r\n}\r\n\r\n.alert-success {\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border-color: #c3e6cb;\r\n}\r\n\r\n.alert-info { /* Thêm màu cho alert info nếu muốn thông báo khác */\r\n    background-color: #d1ecf1;\r\n    color: #0c5460;\r\n    border-color: #bee5eb;\r\n}\r\n\r\n/* Ẩn alert khi không hiển thị */\r\n.alert[style*=\"opacity: 0\"] {\r\n  display: none;\r\n}\r\n\r\n/* Bảng sản phẩm */\r\ntable {\r\n    width: 100%; /* Chiếm toàn bộ chiều rộng có sẵn */\r\n    border-collapse: collapse; /* Gộp các đường viền của ô */\r\n    margin-top: 20px; /* Khoảng cách từ bảng đến các thành phần phía trên */\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03); /* Đổ bóng nhẹ cho bảng */\r\n    background-color: #fff; /* Nền trắng cho bảng */\r\n    border-radius: 6px; /* Bo tròn các góc bảng */\r\n    overflow: hidden; /* Đảm bảo nội dung không tràn ra khỏi các góc bo tròn */\r\n}\r\n\r\nth, td {\r\n    padding: 12px 18px; /* Khoảng đệm bên trong mỗi ô */\r\n    text-align: left; /* Căn trái nội dung trong ô */\r\n    border-bottom: 1px solid #f0f0f0; /* Đường kẻ dưới mỗi hàng */\r\n}\r\n\r\nth {\r\n    background-color: #f9f9f9; /* Nền xám nhạt cho hàng tiêu đề */\r\n    color: #555; /* Màu chữ xám đậm cho tiêu đề */\r\n    font-weight: 600; /* Độ đậm của chữ */\r\n    text-transform: uppercase; /* Chuyển chữ thành chữ hoa */\r\n    font-size: 0.85em; /* Kích thước font nhỏ hơn cho tiêu đề cột */\r\n}\r\n\r\ntr:hover {\r\n    background-color: #fcfcfc; /* Hiệu ứng nền hơi sáng hơn khi rê chuột qua hàng */\r\n}\r\n\r\n/* Các nút hành động trong bảng (Sửa, Xóa) */\r\n.actions { \r\n    display: flex; /* Sử dụng Flexbox để bố trí các nút */\r\n    gap: 8px; /* Khoảng cách giữa các nút */\r\n    justify-content: flex-start; /* Căn trái các nút hành động trong ô */\r\n    align-items: center; /* Căn giữa các nút theo chiều dọc */\r\n}\r\n\r\n.actions button {\r\n    padding: 6px 12px; /* Kích thước padding bên trong nút */\r\n    border: none; /* Bỏ viền nút */\r\n    border-radius: 4px; /* Bo tròn các góc nút */\r\n    cursor: pointer; /* Thay đổi con trỏ thành bàn tay */\r\n    font-size: 0.8em; /* Kích thước font nhỏ hơn */\r\n    font-weight: 500; /* Độ đậm của chữ */\r\n    transition: background-color 0.3s ease, transform 0.2s ease; /* Hiệu ứng chuyển động mượt mà */\r\n    flex-shrink: 0; /* Ngăn không cho nút bị co lại */\r\n}\r\n\r\n.actions .edit {\r\n    background-color: #f2c75a; /* Màu vàng cam nhạt, nhất quán */\r\n    color: #333; /* Màu chữ đen hoặc xám đậm để tương phản */\r\n}\r\n\r\n.actions .edit:hover {\r\n    background-color: #e0b64d; /* Màu tối hơn khi rê chuột qua */\r\n    transform: translateY(-1px); /* Nút hơi nhích lên */\r\n}\r\n\r\n.actions .delete {\r\n    background-color: #e84c3d; /* Màu đỏ tươi, nhất quán */\r\n    color: white; /* Màu chữ trắng */\r\n}\r\n\r\n.actions .delete:hover {\r\n    background-color: #d13c2c; /* Màu tối hơn khi rê chuột qua */\r\n    transform: translateY(-1px); /* Nút hơi nhích lên */\r\n}\r\n\r\n/* Điều chỉnh responsive cho màn hình nhỏ hơn 768px */\r\n@media (max-width: 768px) {\r\n    .page-content {\r\n        padding: 20px; /* Giảm padding trên màn hình nhỏ */\r\n        margin: 20px auto; /* Giảm margin trên màn hình nhỏ */\r\n    }\r\n\r\n    .page-title {\r\n        font-size: 1.5em; /* Giảm kích thước font tiêu đề */\r\n        padding: 12px 0; /* Giảm padding tiêu đề */\r\n    }\r\n\r\n    .page-content p {\r\n        font-size: 1em; /* Giảm kích thước font đoạn văn bản */\r\n    }\r\n\r\n    th, td {\r\n        padding: 10px 15px; /* Giảm padding trong bảng */\r\n        font-size: 0.85em; /* Giảm kích thước font trong bảng */\r\n    }\r\n\r\n    .btn-add {\r\n        padding: 8px 15px; /* Giảm padding nút thêm */\r\n        font-size: 0.9em; /* Giảm kích thước font nút thêm */\r\n    }\r\n\r\n    .actions button {\r\n        padding: 5px 10px; /* Giảm padding nút hành động */\r\n        font-size: 0.75em; /* Giảm kích thước font nút hành động */\r\n    }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAwBbA,KAAK,EAAC;AAAS;;;;uBAxB3BC,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJC,mBAAA,CAA8C;IAAzCH,KAAK,EAAC;EAAY,GAAC,kBAAgB,qB,0BACxCG,mBAAA,CAAsF,WAAnF,iFAA+E,qBAElFA,mBAAA,CAAoE;IAA5DH,KAAK,EAAC,SAAS;IAAEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,iBAAe,GAEhDG,KAAA,CAAAC,SAAS,I,cAApBT,mBAAA,CAA4E;;IAArDD,KAAK,EAAAW,eAAA,WAAYF,KAAA,CAAAG,SAAS;sBAAMH,KAAA,CAAAI,YAAY,2B,mCAEnEV,mBAAA,CAsBQ,gB,0BArBNA,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAkB,YAAd,WAAS,E,uBAGjBA,mBAAA,CAWQ,iB,kBAVNF,mBAAA,CASKa,SAAA,QAAAC,WAAA,CATiBN,KAAA,CAAAO,QAAQ,EAAnBC,OAAO;yBAAlBhB,mBAAA,CASK;MAT4BiB,GAAG,EAAED,OAAO,CAACE;QAC5ChB,mBAAA,CAAyB,YAAAiB,gBAAA,CAAlBH,OAAO,CAACE,EAAE,kBACjBhB,mBAAA,CAA2B,YAAAiB,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBlB,mBAAA,CAA4C,YAAAiB,gBAAA,CAArCb,QAAA,CAAAe,cAAc,CAACL,OAAO,CAACM,KAAK,mBACnCpB,mBAAA,CAA+B,YAAAiB,gBAAA,CAAxBH,OAAO,CAACO,QAAQ,kBACvBrB,mBAAA,CAGK,MAHLsB,UAGK,GAFHtB,mBAAA,CAA+D;MAAvDH,KAAK,EAAC,MAAM;MAAEI,OAAK,EAAAsB,MAAA,IAAEnB,QAAA,CAAAoB,WAAW,CAACV,OAAO;OAAG,KAAG,iBAAAW,UAAA,GACtDzB,mBAAA,CAAmE;MAA3DH,KAAK,EAAC,QAAQ;MAAEI,OAAK,EAAAsB,MAAA,IAAEnB,QAAA,CAAAsB,aAAa,CAACZ,OAAO;OAAG,KAAG,iBAAAa,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}