{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"stats\"\n};\nconst _hoisted_2 = {\n  class: \"stat-card orange\"\n};\nconst _hoisted_3 = {\n  class: \"stat-card purple\"\n};\nconst _hoisted_4 = {\n  class: \"stat-card green\"\n};\nconst _hoisted_5 = {\n  class: \"stat-card yellow\"\n};\nconst _hoisted_6 = {\n  class: \"activity\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createTextVNode(\"Tổng sản phẩm\", -1 /* CACHED */)), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"strong\", null, _toDisplayString($data.totalProducts), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createTextVNode(\"Đơn hàng mới\", -1 /* CACHED */)), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"strong\", null, _toDisplayString($data.newOrders), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createTextVNode(\"Doanh thu\", -1 /* CACHED */)), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"strong\", null, _toDisplayString($data.revenue), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createTextVNode(\"Khách hàng\", -1 /* CACHED */)), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"strong\", null, _toDisplayString($data.customers), 1 /* TEXT */)])]), _createElementVNode(\"section\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Hoạt động gần đây\", -1 /* CACHED */)), _createElementVNode(\"table\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Khách hàng\"), _createElementVNode(\"th\", null, \"Hành động\"), _createElementVNode(\"th\", null, \"Ngày\"), _createElementVNode(\"th\", null, \"Trạng thái\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recentActivities, (activity, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(activity.customer), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(activity.action), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(activity.date), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass(['status', activity.statusClass])\n    }, _toDisplayString(activity.statusText), 3 /* TEXT, CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _cache[10] || (_cache[10] = _createElementVNode(\"section\", {\n    class: \"dashboard\"\n  }, [_createElementVNode(\"h2\", null, \"Thống kê sản phẩm theo loại\"), _createElementVNode(\"canvas\", {\n    id: \"categoryChart\",\n    width: \"300\",\n    height: \"300\"\n  })], -1 /* CACHED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","$data","totalProducts","_hoisted_3","newOrders","_hoisted_4","revenue","_hoisted_5","customers","_hoisted_6","_createElementBlock","_Fragment","_renderList","recentActivities","activity","index","key","customer","action","date","_normalizeClass","statusClass","statusText","id","width","height"],"sources":["C:\\admin html\\my-new-admin-dashboard\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <section class=\"stats\">\r\n    <div class=\"stat-card orange\">Tổng sản phẩm<br><strong>{{ totalProducts }}</strong></div>\r\n    <div class=\"stat-card purple\">Đơn hàng mới<br><strong>{{ newOrders }}</strong></div>\r\n    <div class=\"stat-card green\">Doanh thu<br><strong>{{ revenue }}</strong></div>\r\n    <div class=\"stat-card yellow\">Khách hàng<br><strong>{{ customers }}</strong></div>\r\n  </section>\r\n\r\n  <section class=\"activity\">\r\n    <h2>Hoạt động gần đây</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Khách hàng</th>\r\n          <th>Hành động</th>\r\n          <th>Ngày</th>\r\n          <th>Trạng thái</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(activity, index) in recentActivities\" :key=\"index\">\r\n          <td>{{ activity.customer }}</td>\r\n          <td>{{ activity.action }}</td>\r\n          <td>{{ activity.date }}</td>\r\n          <td><span :class=\"['status', activity.statusClass]\">{{ activity.statusText }}</span></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </section>\r\n\r\n  <section class=\"dashboard\">\r\n    <h2>Thống kê sản phẩm theo loại</h2>\r\n    <canvas id=\"categoryChart\" width=\"300\" height=\"300\"></canvas>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  data() {\r\n    return {\r\n      totalProducts: 3,\r\n      newOrders: 120,\r\n      revenue: '₫75,000,000',\r\n      customers: 6,\r\n      recentActivities: [\r\n        { customer: 'Nguyễn Văn A', action: 'Đặt hàng mới', date: '2023-11-01', statusText: 'Hoàn tất', statusClass: 'done' },\r\n        { customer: 'Trần Thị B', action: 'Thêm sản phẩm vào giỏ', date: '2023-11-03', statusText: 'Chưa xử lý', statusClass: 'pending' },\r\n        { customer: 'Lê Văn C', action: 'Đăng ký tài khoản', date: '2023-11-05', statusText: 'Kích hoạt', statusClass: 'active' },\r\n      ],\r\n      categoryChartData: {\r\n        labels: ['Ghế sofa', 'Bàn ăn', 'Tủ quần áo', 'Bàn làm việc'],\r\n        datasets: [{\r\n          data: [25, 35, 20, 20],\r\n          backgroundColor: ['#007bff', '#ff4d4d', '#28a745', '#ffc107'],\r\n          borderColor: '#fff',\r\n          borderWidth: 2\r\n        }]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.createCategoryChart();\r\n  },\r\n  methods: {\r\n    createCategoryChart() {\r\n      const ctx = document.getElementById('categoryChart');\r\n      if (ctx) {\r\n        new Chart(ctx, {\r\n          type: 'doughnut',\r\n          data: this.categoryChartData,\r\n          options: {\r\n            responsive: true,\r\n            plugins: {\r\n              legend: {\r\n                position: 'bottom',\r\n                labels: {\r\n                  font: {\r\n                    size: 14\r\n                  }\r\n                }\r\n              },\r\n              tooltip: {\r\n                enabled: true\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Global styles for the dashboard component */\r\n/* Đảm bảo box-sizing là border-box cho mọi phần tử để tính toán kích thước dễ dàng */\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Font chữ dễ đọc */\r\n    background-color: #f4f6f9; /* Màu nền tổng thể nhẹ nhàng */\r\n    color: #333; /* Màu chữ mặc định */\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* Section: Thống kê nhanh (Stats) */\r\n/* ------------------------------------ */\r\n.stats {\r\n    display: grid; /* Sử dụng CSS Grid để tạo bố cục linh hoạt cho các thẻ thống kê */\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Tự động điều chỉnh số cột */\r\n    gap: 20px; /* Khoảng cách giữa các thẻ thống kê */\r\n    margin-bottom: 30px; /* Khoảng cách với phần Hoạt động gần đây */\r\n}\r\n\r\n.stat-card {\r\n    background-color: #ffffff; /* Nền trắng cho các thẻ thống kê */\r\n    padding: 25px; /* Khoảng đệm bên trong thẻ */\r\n    border-radius: 10px; /* Bo tròn góc thẻ */\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08); /* Đổ bóng nhẹ để thẻ nổi bật */\r\n    text-align: center; /* Căn giữa nội dung văn bản */\r\n    font-size: 1.1em; /* Kích thước chữ lớn hơn cho thông tin */\r\n    color: #555; /* Màu chữ mặc định cho thông tin mô tả */\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Hiệu ứng mượt mà khi tương tác */\r\n}\r\n\r\n.stat-card:hover {\r\n    transform: translateY(-5px); /* Nâng thẻ lên một chút khi rê chuột */\r\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12); /* Đổ bóng mạnh hơn khi rê chuột */\r\n}\r\n\r\n.stat-card strong {\r\n    display: block; /* Đặt số liệu thống kê trên một dòng riêng */\r\n    font-size: 2.2em; /* Kích thước chữ lớn cho số liệu thống kê */\r\n    margin-top: 10px; /* Khoảng cách với dòng mô tả */\r\n    font-weight: 700; /* In đậm số liệu */\r\n}\r\n\r\n/* Các màu sắc đặc trưng cho từng loại thẻ thống kê */\r\n.stat-card.orange strong {\r\n    color: #fd7e14; /* Màu cam */\r\n}\r\n\r\n.stat-card.purple strong {\r\n    color: #6f42c1; /* Màu tím */\r\n}\r\n\r\n.stat-card.green strong {\r\n    color: #28a745; /* Màu xanh lá cây */\r\n}\r\n\r\n.stat-card.yellow strong {\r\n    color: #ffc107; /* Màu vàng */\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* Section: Hoạt động gần đây (Activity) */\r\n/* ------------------------------------ */\r\n.activity {\r\n    background-color: #ffffff; /* Nền trắng cho phần hoạt động */\r\n    padding: 30px; /* Khoảng đệm bên trong */\r\n    border-radius: 10px; /* Bo tròn góc */\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08); /* Đổ bóng nhẹ */\r\n    margin-bottom: 30px; /* Khoảng cách với phần Thống kê sản phẩm */\r\n}\r\n\r\n.activity h2, .dashboard h2 {\r\n    font-size: 1.8em; /* Kích thước tiêu đề H2 */\r\n    color: #343a40; /* Màu chữ xám đậm */\r\n    margin-bottom: 25px; /* Khoảng cách với bảng/biểu đồ */\r\n    text-align: center; /* Căn giữa tiêu đề */\r\n    padding-bottom: 10px;\r\n    border-bottom: 2px solid #eee; /* Đường kẻ dưới tiêu đề */\r\n}\r\n\r\n.activity table {\r\n    width: 100%; /* Chiếm toàn bộ chiều rộng */\r\n    border-collapse: collapse; /* Gộp các đường viền */\r\n    table-layout: fixed; /* Giúp các cột có chiều rộng cố định */\r\n}\r\n\r\n.activity th, .activity td {\r\n    padding: 15px; /* Khoảng đệm cho ô */\r\n    text-align: left; /* Căn trái nội dung */\r\n    border-bottom: 1px solid #e9ecef; /* Đường kẻ dưới mỗi hàng */\r\n}\r\n\r\n.activity th {\r\n    background-color: #f8f9fa; /* Nền xám nhạt cho tiêu đề cột */\r\n    color: #6c757d; /* Màu chữ xám cho tiêu đề */\r\n    font-weight: 600; /* In đậm tiêu đề */\r\n    text-transform: uppercase; /* Chữ hoa cho tiêu đề */\r\n    font-size: 0.9em; /* Kích thước font nhỏ hơn một chút */\r\n}\r\n\r\n.activity tbody tr:hover {\r\n    background-color: #fefefe; /* Hiệu ứng nền sáng hơn khi rê chuột qua hàng */\r\n}\r\n\r\n/* CSS cho các thẻ trạng thái (status badges) */\r\n.status {\r\n    display: inline-block; /* Để có thể thiết lập padding và border-radius */\r\n    padding: 6px 12px; /* Khoảng đệm bên trong thẻ */\r\n    border-radius: 20px; /* Bo tròn rất nhiều để tạo hình viên thuốc */\r\n    font-size: 0.8em; /* Kích thước font nhỏ hơn */\r\n    font-weight: 600; /* In đậm chữ */\r\n    text-transform: uppercase; /* Chữ hoa */\r\n    color: #fff; /* Màu chữ trắng mặc định */\r\n}\r\n\r\n.status.done {\r\n    background-color: #28a745; /* Xanh lá cây cho trạng thái \"Hoàn tất\" */\r\n}\r\n\r\n.status.pending {\r\n    background-color: #ffc107; /* Vàng cho trạng thái \"Chưa xử lý\" */\r\n    color: #333; /* Chữ đen để dễ nhìn trên nền vàng */\r\n}\r\n\r\n.status.active {\r\n    background-color: #007bff; /* Xanh dương cho trạng thái \"Kích hoạt\" */\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* Section: Biểu đồ (Dashboard) */\r\n/* ------------------------------------ */\r\n.dashboard {\r\n    background-color: #ffffff; /* Nền trắng cho phần biểu đồ */\r\n    padding: 30px; /* Khoảng đệm bên trong */\r\n    border-radius: 10px; /* Bo tròn góc */\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08); /* Đổ bóng nhẹ */\r\n    display: flex; /* Sử dụng flexbox để căn giữa biểu đồ */\r\n    flex-direction: column; /* Sắp xếp các mục theo cột */\r\n    align-items: center; /* Căn giữa theo chiều ngang */\r\n    justify-content: center; /* Căn giữa theo chiều dọc */\r\n}\r\n\r\n.dashboard canvas {\r\n    max-width: 400px; /* Giới hạn chiều rộng tối đa của biểu đồ để trông gọn gàng */\r\n    height: auto; /* Đảm bảo chiều cao tự động điều chỉnh */\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n    .stats {\r\n        grid-template-columns: 1fr; /* Trên màn hình nhỏ hơn, mỗi thẻ thống kê chiếm 1 hàng */\r\n    }\r\n\r\n    .stat-card {\r\n        padding: 20px; /* Giảm padding thẻ thống kê */\r\n    }\r\n\r\n    .activity h2, .dashboard h2 {\r\n        font-size: 1.5em; /* Giảm kích thước tiêu đề trên màn hình nhỏ */\r\n    }\r\n\r\n    .activity th, .activity td {\r\n        padding: 10px; /* Giảm padding bảng */\r\n        font-size: 0.85em; /* Giảm kích thước font bảng */\r\n    }\r\n}\r\n</style>\r\n"],"mappings":";;EACWA,KAAK,EAAC;AAAO;;EACfA,KAAK,EAAC;AAAkB;;EACxBA,KAAK,EAAC;AAAkB;;EACxBA,KAAK,EAAC;AAAiB;;EACvBA,KAAK,EAAC;AAAkB;;EAGtBA,KAAK,EAAC;AAAU;;6DAPzBC,mBAAA,CAKU,WALVC,UAKU,GAJRD,mBAAA,CAAyF,OAAzFE,UAAyF,G,2CAA3D,eAAa,qB,0BAAAF,mBAAA,CAAI,qCAAAA,mBAAA,CAAoC,gBAAAG,gBAAA,CAAzBC,KAAA,CAAAC,aAAa,iB,GACvEL,mBAAA,CAAoF,OAApFM,UAAoF,G,2CAAtD,cAAY,qB,0BAAAN,mBAAA,CAAI,qCAAAA,mBAAA,CAAgC,gBAAAG,gBAAA,CAArBC,KAAA,CAAAG,SAAS,iB,GAClEP,mBAAA,CAA8E,OAA9EQ,UAA8E,G,2CAAjD,WAAS,qB,0BAAAR,mBAAA,CAAI,qCAAAA,mBAAA,CAA8B,gBAAAG,gBAAA,CAAnBC,KAAA,CAAAK,OAAO,iB,GAC5DT,mBAAA,CAAkF,OAAlFU,UAAkF,G,2CAApD,YAAU,qB,0BAAAV,mBAAA,CAAI,qCAAAA,mBAAA,CAAgC,gBAAAG,gBAAA,CAArBC,KAAA,CAAAO,SAAS,iB,KAGlEX,mBAAA,CAoBU,WApBVY,UAoBU,G,0BAnBRZ,mBAAA,CAA0B,YAAtB,mBAAiB,qBACrBA,mBAAA,CAiBQ,gB,0BAhBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAmB,YAAf,YAAU,E,uBAGlBA,mBAAA,CAOQ,iB,kBANNa,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CAL2BX,KAAA,CAAAY,gBAAgB,GAApCC,QAAQ,EAAEC,KAAK;yBAA3BL,mBAAA,CAKK;MAL8CM,GAAG,EAAED;IAAK,IAC3DlB,mBAAA,CAAgC,YAAAG,gBAAA,CAAzBc,QAAQ,CAACG,QAAQ,kBACxBpB,mBAAA,CAA8B,YAAAG,gBAAA,CAAvBc,QAAQ,CAACI,MAAM,kBACtBrB,mBAAA,CAA4B,YAAAG,gBAAA,CAArBc,QAAQ,CAACK,IAAI,kBACpBtB,mBAAA,CAAyF,aAArFA,mBAAA,CAAgF;MAAzED,KAAK,EAAAwB,eAAA,YAAaN,QAAQ,CAACO,WAAW;wBAAMP,QAAQ,CAACQ,UAAU,wB;oEAMlFzB,mBAAA,CAGU;IAHDD,KAAK,EAAC;EAAW,IACxBC,mBAAA,CAAoC,YAAhC,6BAA2B,GAC/BA,mBAAA,CAA6D;IAArD0B,EAAE,EAAC,eAAe;IAACC,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}