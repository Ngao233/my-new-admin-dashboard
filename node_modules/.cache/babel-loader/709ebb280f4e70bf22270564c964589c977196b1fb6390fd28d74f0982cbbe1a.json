{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-content\"\n};\nconst _hoisted_2 = {\n  class: \"actions\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"page-title\"\n  }, \"Quản Lý Khách Hàng\", -1 /* CACHED */)), _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"Trang này hiển thị danh sách các khách hàng đã đăng ký hoặc đã tương tác với hệ thống của bạn.\", -1 /* CACHED */)), $data.showAlert ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['alert', $data.alertType])\n  }, _toDisplayString($data.alertMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Tên Khách Hàng\"), _createElementVNode(\"th\", null, \"Email\"), _createElementVNode(\"th\", null, \"Số Điện Thoại\"), _createElementVNode(\"th\", null, \"Ngày Đăng Ký\"), _createElementVNode(\"th\", null, \"Hành Động\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.phone), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.registrationDate), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_2, [_createElementVNode(\"button\", {\n      class: \"edit\",\n      onClick: $event => $options.viewCustomer(customer)\n    }, \"Xem\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      class: \"delete\",\n      onClick: $event => $options.deleteCustomer(customer)\n    }, \"Xóa\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","$data","showAlert","_normalizeClass","alertType","alertMessage","_Fragment","_renderList","customers","customer","key","id","_toDisplayString","name","email","phone","registrationDate","_hoisted_2","onClick","$event","$options","viewCustomer","_hoisted_3","deleteCustomer","_hoisted_4"],"sources":["C:\\admin html\\my-new-admin-dashboard\\src\\components\\CustomerPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-content\">\r\n    <div class=\"page-title\">Quản Lý Khách Hàng</div>\r\n    <p>Trang này hiển thị danh sách các khách hàng đã đăng ký hoặc đã tương tác với hệ thống của bạn.</p>\r\n\r\n    <div v-if=\"showAlert\" :class=\"['alert', alertType]\">{{ alertMessage }}</div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Tên Khách Hàng</th>\r\n          <th>Email</th>\r\n          <th>Số Điện Thoại</th>\r\n          <th>Ngày Đăng Ký</th>\r\n          <th>Hành Động</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"customer in customers\" :key=\"customer.id\">\r\n          <td>{{ customer.id }}</td>\r\n          <td>{{ customer.name }}</td>\r\n          <td>{{ customer.email }}</td>\r\n          <td>{{ customer.phone }}</td>\r\n          <td>{{ customer.registrationDate }}</td>\r\n          <td class=\"actions\">\r\n            <button class=\"edit\" @click=\"viewCustomer(customer)\">Xem</button>\r\n            <button class=\"delete\" @click=\"deleteCustomer(customer)\">Xóa</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CustomerPage',\r\n  data() {\r\n    return {\r\n      customers: [\r\n        { id: 101, name: 'Nguyễn Văn A', email: 'nguyenvana@example.com', phone: '0901234567', registrationDate: '2023-01-15' },\r\n        { id: 102, name: 'Trần Thị B', email: 'tranhtb@example.com', phone: '0912345678', registrationDate: '2023-02-20' },\r\n        { id: 103, name: 'Lê Văn C', email: 'levanc@example.com', phone: '0987654321', registrationDate: '2023-03-10' },\r\n        { id: 104, name: 'Phạm Thu D', email: 'phamthud@example.com', phone: '0976543210', registrationDate: '2023-04-01' },\r\n      ],\r\n      showAlert: false,\r\n      alertMessage: '',\r\n      alertType: 'alert-success' // Có thể là 'alert-success', 'alert-info', 'alert-warning', 'alert-error'\r\n    };\r\n  },\r\n  methods: {\r\n    viewCustomer(customer) {\r\n      // Logic để xem chi tiết khách hàng\r\n      this.alertMessage = `Xem chi tiết khách hàng: ${customer.name} (ID: ${customer.id})`;\r\n      this.alertType = 'alert-info';\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    deleteCustomer(customer) {\r\n      if (confirm(`Bạn có chắc chắn muốn xóa khách hàng \"${customer.name}\" (ID: ${customer.id}) không?`)) {\r\n        this.customers = this.customers.filter(c => c.id !== customer.id);\r\n        this.alertMessage = `Đã xóa khách hàng \"${customer.name}\" thành công!`;\r\n        this.alertType = 'alert-success'; // Hoặc 'alert-warning' nếu bạn muốn cảnh báo việc xóa\r\n        this.showAlert = true;\r\n        setTimeout(() => {\r\n          this.showAlert = false;\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ------------------------------------ */\r\n/* CSS cho trang Quản Lý Khách Hàng (CustomerPage.vue) */\r\n/* ------------------------------------ */\r\n\r\n/* Reset một số thuộc tính cơ bản */\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n/* Lưu ý: CSS cho 'html' và 'body' thường được đặt trong một file CSS global (ví dụ: src/assets/styles/main.css) */\r\n/* Tuy nhiên, nếu bạn muốn đặt ở đây cho mục đích demo, nó vẫn sẽ hoạt động */\r\nhtml, body {\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background-color: #f4f6f9;\r\n    color: #333;\r\n}\r\n\r\n/* CSS cho khối nội dung chính của trang (cái \"card\" trắng) */\r\n\r\n\r\n/* CSS cho tiêu đề trang \"Quản Lý Khách Hàng\" */\r\n.page-title {\r\n    font-size: 1.8em;\r\n    color: #ffffff;\r\n    background-color: #5e4329; /* Màu nền nâu đậm, nhất quán */\r\n    text-align: center;\r\n    padding: 15px 0;\r\n    margin-bottom: 30px;\r\n    font-weight: 600;\r\n    border-radius: 6px;\r\n}\r\n\r\n/* Kiểu dáng cho đoạn văn bản mô tả ban đầu */\r\n.page-content p {\r\n    font-size: 1.1em;\r\n    color: #555;\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* CSS cho các thành phần chính (Bảng, Alert) */\r\n/* ------------------------------------ */\r\n\r\n/* Hộp thông báo (alert) */\r\n.alert {\r\n    padding: 12px 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 5px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease-out;\r\n}\r\n\r\n.alert-success {\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border-color: #c3e6cb;\r\n}\r\n\r\n.alert-info {\r\n    background-color: #d1ecf1;\r\n    color: #0c5460;\r\n    border-color: #bee5eb;\r\n}\r\n\r\n.alert-warning { /* Thêm màu cảnh báo cho trạng thái hủy/xóa */\r\n    background-color: #fff3cd;\r\n    color: #664d03;\r\n    border-color: #ffecb5;\r\n}\r\n\r\n/* Ẩn alert khi không hiển thị */\r\n.alert[style*=\"opacity: 0\"] {\r\n  display: none;\r\n}\r\n\r\n/* Bảng khách hàng */\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    overflow: hidden;\r\n}\r\n\r\nth, td {\r\n    padding: 12px 18px;\r\n    text-align: left;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\nth {\r\n    background-color: #f9f9f9;\r\n    color: #555;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    font-size: 0.85em;\r\n}\r\n\r\ntr:hover {\r\n    background-color: #fcfcfc;\r\n}\r\n\r\n/* Các nút hành động trong bảng (Xem, Xóa) */\r\n.actions {\r\n    display: flex;\r\n    gap: 8px;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.actions button {\r\n    padding: 6px 12px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 0.8em;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.actions .edit { /* Nút \"Xem\" sẽ dùng màu tương tự \"Sửa\" */\r\n    background-color: #f2c75a;\r\n    color: #333;\r\n}\r\n\r\n.actions .edit:hover {\r\n    background-color: #e0b64d;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.actions .delete { /* Nút \"Xóa\" */\r\n    background-color: #e84c3d;\r\n    color: white;\r\n}\r\n\r\n.actions .delete:hover {\r\n    background-color: #d13c2c;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n    .page-content {\r\n        padding: 20px;\r\n        margin: 20px auto;\r\n    }\r\n\r\n    .page-title {\r\n        font-size: 1.5em;\r\n        padding: 12px 0;\r\n    }\r\n\r\n    .page-content p {\r\n        font-size: 1em;\r\n    }\r\n\r\n    th, td {\r\n        padding: 10px 15px;\r\n        font-size: 0.85em;\r\n    }\r\n\r\n    .actions button {\r\n        padding: 5px 10px;\r\n        font-size: 0.75em;\r\n    }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAwBbA,KAAK,EAAC;AAAS;;;;uBAxB3BC,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJC,mBAAA,CAAgD;IAA3CH,KAAK,EAAC;EAAY,GAAC,oBAAkB,qB,0BAC1CG,mBAAA,CAAqG,WAAlG,gGAA8F,qBAEtFC,KAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAA4E;;IAArDD,KAAK,EAAAM,eAAA,WAAYF,KAAA,CAAAG,SAAS;sBAAMH,KAAA,CAAAI,YAAY,2B,mCAEnEL,mBAAA,CAwBQ,gB,0BAvBNA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAkB,YAAd,WAAS,E,uBAGjBA,mBAAA,CAYQ,iB,kBAXNF,mBAAA,CAUKQ,SAAA,QAAAC,WAAA,CAVkBN,KAAA,CAAAO,SAAS,EAArBC,QAAQ;yBAAnBX,mBAAA,CAUK;MAV8BY,GAAG,EAAED,QAAQ,CAACE;QAC/CX,mBAAA,CAA0B,YAAAY,gBAAA,CAAnBH,QAAQ,CAACE,EAAE,kBAClBX,mBAAA,CAA4B,YAAAY,gBAAA,CAArBH,QAAQ,CAACI,IAAI,kBACpBb,mBAAA,CAA6B,YAAAY,gBAAA,CAAtBH,QAAQ,CAACK,KAAK,kBACrBd,mBAAA,CAA6B,YAAAY,gBAAA,CAAtBH,QAAQ,CAACM,KAAK,kBACrBf,mBAAA,CAAwC,YAAAY,gBAAA,CAAjCH,QAAQ,CAACO,gBAAgB,kBAChChB,mBAAA,CAGK,MAHLiB,UAGK,GAFHjB,mBAAA,CAAiE;MAAzDH,KAAK,EAAC,MAAM;MAAEqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACZ,QAAQ;OAAG,KAAG,iBAAAa,UAAA,GACxDtB,mBAAA,CAAqE;MAA7DH,KAAK,EAAC,QAAQ;MAAEqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,cAAc,CAACd,QAAQ;OAAG,KAAG,iBAAAe,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}