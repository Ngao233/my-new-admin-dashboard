{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-content\"\n};\nconst _hoisted_2 = {\n  class: \"actions\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"page-title\"\n  }, \"Quản Lý Tin Tức\", -1 /* CACHED */)), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Trang này cho phép bạn quản lý các bài viết tin tức, bao gồm việc thêm mới, chỉnh sửa và quản lý trạng thái hiển thị.\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    class: \"btn-add\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addArticle && $options.addArticle(...args))\n  }, \"+ Thêm Bài Viết\"), $data.showAlert ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['alert', $data.alertType])\n  }, _toDisplayString($data.alertMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Tiêu Đề\"), _createElementVNode(\"th\", null, \"Ngày Đăng\"), _createElementVNode(\"th\", null, \"Người Đăng\"), _createElementVNode(\"th\", null, \"Trạng Thái\"), _createElementVNode(\"th\", null, \"Hành Động\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, article => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: article.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(article.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(article.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(article.publishDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(article.author), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass(['status', article.statusClass])\n    }, _toDisplayString(article.statusText), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_2, [_createElementVNode(\"button\", {\n      class: \"edit\",\n      onClick: $event => $options.editArticle(article)\n    }, \"Sửa\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      class: \"delete\",\n      onClick: $event => $options.toggleArticleStatus(article)\n    }, _toDisplayString(article.statusText === 'Đã đăng' ? 'Ẩn' : 'Đăng'), 9 /* TEXT, PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","addArticle","$data","showAlert","_normalizeClass","alertType","alertMessage","_Fragment","_renderList","articles","article","key","id","_toDisplayString","title","publishDate","author","statusClass","statusText","_hoisted_2","$event","editArticle","_hoisted_3","toggleArticleStatus","_hoisted_4"],"sources":["C:\\xampp\\htdocs\\duan\\my-new-admin-dashboard\\src\\components\\NewsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-content\">\r\n    <div class=\"page-title\">Quản Lý Tin Tức</div>\r\n    <p>Trang này cho phép bạn quản lý các bài viết tin tức, bao gồm việc thêm mới, chỉnh sửa và quản lý trạng thái hiển thị.</p>\r\n\r\n    <button class=\"btn-add\" @click=\"addArticle\">+ Thêm Bài Viết</button>\r\n\r\n    <div v-if=\"showAlert\" :class=\"['alert', alertType]\">{{ alertMessage }}</div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Tiêu Đề</th>\r\n          <th>Ngày Đăng</th>\r\n          <th>Người Đăng</th>\r\n          <th>Trạng Thái</th>\r\n          <th>Hành Động</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"article in articles\" :key=\"article.id\">\r\n          <td>{{ article.id }}</td>\r\n          <td>{{ article.title }}</td>\r\n          <td>{{ article.publishDate }}</td>\r\n          <td>{{ article.author }}</td>\r\n          <td><span :class=\"['status', article.statusClass]\">{{ article.statusText }}</span></td>\r\n          <td class=\"actions\">\r\n            <button class=\"edit\" @click=\"editArticle(article)\">Sửa</button>\r\n            <button class=\"delete\" @click=\"toggleArticleStatus(article)\">\r\n              {{ article.statusText === 'Đã đăng' ? 'Ẩn' : 'Đăng' }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'NewsPage',\r\n  data() {\r\n    return {\r\n      articles: [\r\n        { id: 1, title: 'Xu hướng nội thất 2024: Đơn giản và Đa năng', publishDate: '2024-07-20', author: 'Admin', statusText: 'Đã đăng', statusClass: 'active' },\r\n        { id: 2, title: 'Mẹo giữ gìn đồ gỗ nội thất luôn bền đẹp', publishDate: '2024-07-15', author: 'Biên tập viên', statusText: 'Đã đăng', statusClass: 'active' },\r\n        { id: 3, title: 'Phong thủy trong thiết kế nhà ở: Những điều cần biết', publishDate: '2024-07-10', author: 'Chuyên gia', statusText: 'Bản nháp', statusClass: 'draft' },\r\n        { id: 4, title: 'Top 5 loại cây cảnh phù hợp với không gian văn phòng', publishDate: '2024-07-05', author: 'Admin', statusText: 'Đã ẩn', statusClass: 'hidden' },\r\n      ],\r\n      showAlert: false,\r\n      alertMessage: '',\r\n      alertType: 'alert-success'\r\n    };\r\n  },\r\n  methods: {\r\n    addArticle() {\r\n      this.alertMessage = 'Chức năng thêm bài viết mới sẽ được phát triển!';\r\n      this.alertType = 'alert-info';\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    editArticle(article) {\r\n      this.alertMessage = `Bạn đang chỉnh sửa bài viết: \"${article.title}\" (ID: ${article.id})`;\r\n      this.alertType = 'alert-info';\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    toggleArticleStatus(article) {\r\n      let newStatusText;\r\n      let newStatusClass;\r\n      let confirmMessage;\r\n      let alertMsg;\r\n      let alertType;\r\n\r\n      if (article.statusText === 'Đã đăng') {\r\n        newStatusText = 'Đã ẩn';\r\n        newStatusClass = 'hidden';\r\n        confirmMessage = `Bạn có chắc chắn muốn ẩn bài viết \"${article.title}\" không?`;\r\n        alertMsg = `Đã ẩn bài viết \"${article.title}\" thành công!`;\r\n        alertType = 'alert-warning';\r\n      } else {\r\n        newStatusText = 'Đã đăng';\r\n        newStatusClass = 'active';\r\n        confirmMessage = `Bạn có chắc chắn muốn đăng lại bài viết \"${article.title}\" không?`;\r\n        alertMsg = `Đã đăng lại bài viết \"${article.title}\" thành công!`;\r\n        alertType = 'alert-success';\r\n      }\r\n\r\n      if (confirm(confirmMessage)) {\r\n        const index = this.articles.findIndex(a => a.id === article.id);\r\n        if (index !== -1) {\r\n          this.articles[index].statusText = newStatusText;\r\n          this.articles[index].statusClass = newStatusClass;\r\n          this.articles = [...this.articles]; // Đảm bảo Vue cập nhật reactive\r\n        }\r\n        this.alertMessage = alertMsg;\r\n        this.alertType = alertType;\r\n      } else {\r\n        this.alertMessage = `Đã hủy thao tác cho bài viết \"${article.title}\".`;\r\n        this.alertType = 'alert-info';\r\n      }\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ------------------------------------ */\r\n/* CSS cho trang Quản Lý Tin Tức (NewsPage.vue) */\r\n/* ------------------------------------ */\r\n\r\n/* Reset một số thuộc tính cơ bản */\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n/* Lưu ý: CSS cho 'html' và 'body' thường được đặt trong một file CSS global (ví dụ: src/assets/styles/main.css) */\r\n/* Tuy nhiên, nếu bạn muốn đặt ở đây cho mục đích demo, nó vẫn sẽ hoạt động */\r\nhtml, body {\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background-color: #f4f6f9;\r\n    color: #333;\r\n}\r\n\r\n/* CSS cho khối nội dung chính của trang (cái \"card\" trắng) */\r\n\r\n/* CSS cho tiêu đề trang \"Quản Lý Tin Tức\" */\r\n.page-title {\r\n    font-size: 1.8em;\r\n    color: #ffffff;\r\n    background-color: #5e4329; /* Màu nền nâu đậm, nhất quán */\r\n    text-align: center;\r\n    padding: 15px 0;\r\n    margin-bottom: 30px;\r\n    font-weight: 600;\r\n    border-radius: 6px;\r\n}\r\n\r\n/* Kiểu dáng cho đoạn văn bản mô tả ban đầu */\r\n.page-content p {\r\n    font-size: 1.1em;\r\n    color: #555;\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* CSS cho các thành phần chính (Nút, Bảng, Alert) */\r\n/* ------------------------------------ */\r\n\r\n/* Nút thêm bài viết */\r\n.btn-add {\r\n    background-color: #e09f3e; /* Màu nâu cam, nhất quán */\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    font-size: 1em;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n    margin-bottom: 25px;\r\n    display: block;\r\n    width: fit-content;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n\r\n.btn-add:hover {\r\n    background-color: #cc8d2d;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n/* Hộp thông báo (alert) */\r\n.alert {\r\n    padding: 12px 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 5px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease-out;\r\n}\r\n\r\n.alert-success {\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border-color: #c3e6cb;\r\n}\r\n\r\n.alert-info {\r\n    background-color: #d1ecf1;\r\n    color: #0c5460;\r\n    border-color: #bee5eb;\r\n}\r\n\r\n.alert-warning {\r\n    background-color: #fff3cd;\r\n    color: #664d03;\r\n    border-color: #ffecb5;\r\n}\r\n\r\n/* Ẩn alert khi không hiển thị */\r\n.alert[style*=\"opacity: 0\"] {\r\n  display: none;\r\n}\r\n\r\n/* Bảng tin tức */\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    overflow: hidden;\r\n}\r\n\r\nth, td {\r\n    padding: 12px 18px;\r\n    text-align: left;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\nth {\r\n    background-color: #f9f9f9;\r\n    color: #555;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    font-size: 0.85em;\r\n}\r\n\r\ntr:hover {\r\n    background-color: #fcfcfc;\r\n}\r\n\r\n/* Các nút hành động trong bảng (Sửa, Đăng/Ẩn) */\r\n.actions {\r\n    display: flex;\r\n    gap: 8px;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.actions button {\r\n    padding: 6px 12px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 0.8em;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.actions .edit { /* Nút \"Sửa\" */\r\n    background-color: #f2c75a;\r\n    color: #333;\r\n}\r\n\r\n.actions .edit:hover {\r\n    background-color: #e0b64d;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.actions .delete { /* Nút \"Ẩn\" hoặc \"Đăng\" */\r\n    background-color: #e84c3d; /* Màu đỏ cho ẩn */\r\n    color: white;\r\n}\r\n.actions .delete:hover {\r\n    background-color: #d13c2c;\r\n    transform: translateY(-1px);\r\n}\r\n/* Nếu muốn nút \"Đăng\" có màu xanh khác */\r\n/* .actions .publish {\r\n    background-color: #28a745;\r\n    color: white;\r\n}\r\n.actions .publish:hover {\r\n    background-color: #218838;\r\n} */\r\n\r\n\r\n/* CSS cho các thẻ trạng thái (status badges) */\r\n.status {\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    border-radius: 20px; /* Hình viên thuốc */\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.status.active { /* Trạng thái \"Đã đăng\" */\r\n    background-color: #28a745; /* Xanh lá cây */\r\n}\r\n\r\n.status.draft { /* Trạng thái \"Bản nháp\" */\r\n    background-color: #ffc107; /* Vàng */\r\n    color: #333;\r\n}\r\n\r\n.status.hidden { /* Trạng thái \"Đã ẩn\" */\r\n    background-color: #6c757d; /* Xám */\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n    .page-content {\r\n        padding: 20px;\r\n        margin: 20px auto;\r\n    }\r\n\r\n    .page-title {\r\n        font-size: 1.5em;\r\n        padding: 12px 0;\r\n    }\r\n\r\n    .page-content p {\r\n        font-size: 1em;\r\n    }\r\n\r\n    th, td {\r\n        padding: 10px 15px;\r\n        font-size: 0.85em;\r\n    }\r\n\r\n    .btn-add {\r\n        padding: 8px 15px;\r\n        font-size: 0.9em;\r\n    }\r\n\r\n    .actions button {\r\n        padding: 5px 10px;\r\n        font-size: 0.75em;\r\n    }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EA0BbA,KAAK,EAAC;AAAS;;;;uBA1B3BC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJC,mBAAA,CAA6C;IAAxCH,KAAK,EAAC;EAAY,GAAC,iBAAe,qB,0BACvCG,mBAAA,CAA4H,WAAzH,uHAAqH,qBAExHA,mBAAA,CAAoE;IAA5DH,KAAK,EAAC,SAAS;IAAEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,iBAAe,GAEhDG,KAAA,CAAAC,SAAS,I,cAApBT,mBAAA,CAA4E;;IAArDD,KAAK,EAAAW,eAAA,WAAYF,KAAA,CAAAG,SAAS;sBAAMH,KAAA,CAAAI,YAAY,2B,mCAEnEV,mBAAA,CA0BQ,gB,0BAzBNA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,E,uBAGjBA,mBAAA,CAcQ,iB,kBAbNF,mBAAA,CAYKa,SAAA,QAAAC,WAAA,CAZiBN,KAAA,CAAAO,QAAQ,EAAnBC,OAAO;yBAAlBhB,mBAAA,CAYK;MAZ4BiB,GAAG,EAAED,OAAO,CAACE;QAC5ChB,mBAAA,CAAyB,YAAAiB,gBAAA,CAAlBH,OAAO,CAACE,EAAE,kBACjBhB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,OAAO,CAACI,KAAK,kBACpBlB,mBAAA,CAAkC,YAAAiB,gBAAA,CAA3BH,OAAO,CAACK,WAAW,kBAC1BnB,mBAAA,CAA6B,YAAAiB,gBAAA,CAAtBH,OAAO,CAACM,MAAM,kBACrBpB,mBAAA,CAAuF,aAAnFA,mBAAA,CAA8E;MAAvEH,KAAK,EAAAW,eAAA,YAAaM,OAAO,CAACO,WAAW;wBAAMP,OAAO,CAACQ,UAAU,wB,GACxEtB,mBAAA,CAKK,MALLuB,UAKK,GAJHvB,mBAAA,CAA+D;MAAvDH,KAAK,EAAC,MAAM;MAAEI,OAAK,EAAAuB,MAAA,IAAEpB,QAAA,CAAAqB,WAAW,CAACX,OAAO;OAAG,KAAG,iBAAAY,UAAA,GACtD1B,mBAAA,CAES;MAFDH,KAAK,EAAC,QAAQ;MAAEI,OAAK,EAAAuB,MAAA,IAAEpB,QAAA,CAAAuB,mBAAmB,CAACb,OAAO;wBACrDA,OAAO,CAACQ,UAAU,sDAAAM,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}