{"ast":null,"code":"export default {\n  name: 'OrderPage',\n  data() {\n    return {\n      orders: [{\n        id: '#DH001',\n        customerName: 'Nguyễn Văn A',\n        orderDate: '2023-11-01',\n        totalAmount: 10000000,\n        statusText: 'Đã giao',\n        statusClass: 'done'\n      }, {\n        id: '#DH002',\n        customerName: 'Trần Thị B',\n        orderDate: '2023-11-03',\n        totalAmount: 5500000,\n        statusText: 'Đang xử lý',\n        statusClass: 'pending'\n      }, {\n        id: '#DH003',\n        customerName: 'Lê Văn C',\n        orderDate: '2023-11-05',\n        totalAmount: 2300000,\n        statusText: 'Đã hủy',\n        statusClass: 'cancelled'\n      }, {\n        id: '#DH004',\n        customerName: 'Phạm Thị D',\n        orderDate: '2023-11-07',\n        totalAmount: 8200000,\n        statusText: 'Đã giao',\n        statusClass: 'done'\n      }, {\n        id: '#DH005',\n        customerName: 'Hoàng Minh E',\n        orderDate: '2023-11-08',\n        totalAmount: 4100000,\n        statusText: 'Đang xử lý',\n        statusClass: 'pending'\n      }],\n      showAlert: false,\n      alertMessage: '',\n      alertType: 'alert-success' // Có thể là 'alert-success', 'alert-info', 'alert-warning', 'alert-error'\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      // Định dạng tiền tệ Việt Nam Đồng\n      return new Intl.NumberFormat('vi-VN', {\n        style: 'currency',\n        currency: 'VND'\n      }).format(value);\n    },\n    viewOrder(order) {\n      // Logic để xem chi tiết đơn hàng\n      this.alertMessage = `Xem chi tiết đơn hàng: ${order.id} của ${order.customerName}`;\n      this.alertType = 'alert-info';\n      this.showAlert = true;\n      setTimeout(() => {\n        this.showAlert = false;\n      }, 3000);\n    },\n    cancelOrder(order) {\n      if (confirm(`Bạn có chắc chắn muốn hủy đơn hàng ${order.id} của \"${order.customerName}\" không?`)) {\n        // Cập nhật trạng thái đơn hàng thành \"Đã hủy\"\n        const index = this.orders.findIndex(o => o.id === order.id);\n        if (index !== -1) {\n          this.orders[index].statusText = 'Đã hủy';\n          this.orders[index].statusClass = 'cancelled';\n          // Có thể tạo một bản sao mới nếu không muốn thay đổi trực tiếp trên mảng data\n          this.orders = [...this.orders];\n        }\n        this.alertMessage = `Đã hủy đơn hàng ${order.id} thành công!`;\n        this.alertType = 'alert-warning'; // Sử dụng màu cảnh báo cho việc hủy\n        this.showAlert = true;\n        setTimeout(() => {\n          this.showAlert = false;\n        }, 3000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","orders","id","customerName","orderDate","totalAmount","statusText","statusClass","showAlert","alertMessage","alertType","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","viewOrder","order","setTimeout","cancelOrder","confirm","index","findIndex","o"],"sources":["C:\\admin html\\my-new-admin-dashboard\\src\\components\\OrderPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-content\">\r\n    <div class=\"page-title\">Quản Lý Đơn Hàng</div>\r\n    <p>Trang này hiển thị danh sách các đơn hàng đã được tạo. Bạn có thể xem chi tiết và cập nhật trạng thái đơn hàng tại đây.</p>\r\n\r\n    <div v-if=\"showAlert\" :class=\"['alert', alertType]\">{{ alertMessage }}</div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID Đơn Hàng</th>\r\n          <th>Khách Hàng</th>\r\n          <th>Ngày Đặt</th>\r\n          <th>Tổng Tiền</th>\r\n          <th>Trạng Thái</th>\r\n          <th>Hành Động</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.id\">\r\n          <td>{{ order.id }}</td>\r\n          <td>{{ order.customerName }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ formatCurrency(order.totalAmount) }}</td>\r\n          <td><span :class=\"['status', order.statusClass]\">{{ order.statusText }}</span></td>\r\n          <td class=\"actions\">\r\n            <button class=\"edit\" @click=\"viewOrder(order)\">Xem</button>\r\n            <button class=\"delete\" @click=\"cancelOrder(order)\">Hủy</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderPage',\r\n  data() {\r\n    return {\r\n      orders: [\r\n        { id: '#DH001', customerName: 'Nguyễn Văn A', orderDate: '2023-11-01', totalAmount: 10000000, statusText: 'Đã giao', statusClass: 'done' },\r\n        { id: '#DH002', customerName: 'Trần Thị B', orderDate: '2023-11-03', totalAmount: 5500000, statusText: 'Đang xử lý', statusClass: 'pending' },\r\n        { id: '#DH003', customerName: 'Lê Văn C', orderDate: '2023-11-05', totalAmount: 2300000, statusText: 'Đã hủy', statusClass: 'cancelled' },\r\n        { id: '#DH004', customerName: 'Phạm Thị D', orderDate: '2023-11-07', totalAmount: 8200000, statusText: 'Đã giao', statusClass: 'done' },\r\n        { id: '#DH005', customerName: 'Hoàng Minh E', orderDate: '2023-11-08', totalAmount: 4100000, statusText: 'Đang xử lý', statusClass: 'pending' },\r\n      ],\r\n      showAlert: false,\r\n      alertMessage: '',\r\n      alertType: 'alert-success' // Có thể là 'alert-success', 'alert-info', 'alert-warning', 'alert-error'\r\n    };\r\n  },\r\n  methods: {\r\n    formatCurrency(value) {\r\n      // Định dạng tiền tệ Việt Nam Đồng\r\n      return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);\r\n    },\r\n    viewOrder(order) {\r\n      // Logic để xem chi tiết đơn hàng\r\n      this.alertMessage = `Xem chi tiết đơn hàng: ${order.id} của ${order.customerName}`;\r\n      this.alertType = 'alert-info';\r\n      this.showAlert = true;\r\n      setTimeout(() => {\r\n        this.showAlert = false;\r\n      }, 3000);\r\n    },\r\n    cancelOrder(order) {\r\n      if (confirm(`Bạn có chắc chắn muốn hủy đơn hàng ${order.id} của \"${order.customerName}\" không?`)) {\r\n        // Cập nhật trạng thái đơn hàng thành \"Đã hủy\"\r\n        const index = this.orders.findIndex(o => o.id === order.id);\r\n        if (index !== -1) {\r\n          this.orders[index].statusText = 'Đã hủy';\r\n          this.orders[index].statusClass = 'cancelled';\r\n          // Có thể tạo một bản sao mới nếu không muốn thay đổi trực tiếp trên mảng data\r\n          this.orders = [...this.orders]; \r\n        }\r\n        this.alertMessage = `Đã hủy đơn hàng ${order.id} thành công!`;\r\n        this.alertType = 'alert-warning'; // Sử dụng màu cảnh báo cho việc hủy\r\n        this.showAlert = true;\r\n        setTimeout(() => {\r\n          this.showAlert = false;\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ------------------------------------ */\r\n/* CSS cho trang Quản Lý Đơn Hàng (OrderPage.vue) */\r\n/* ------------------------------------ */\r\n\r\n/* Reset một số thuộc tính cơ bản */\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n/* Lưu ý: CSS cho 'html' và 'body' thường được đặt trong một file CSS global (ví dụ: src/assets/styles/main.css) */\r\n/* Tuy nhiên, nếu bạn muốn đặt ở đây cho mục đích demo, nó vẫn sẽ hoạt động */\r\nhtml, body {\r\n    height: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background-color: #f4f6f9;\r\n    color: #333;\r\n}\r\n\r\n/* CSS cho khối nội dung chính của trang (cái \"card\" trắng) */\r\n.page-content {\r\n    padding: 30px;\r\n    max-width: 950px; /* Chiều rộng tương tự trang sản phẩm để bảng có không gian */\r\n    margin: 40px auto;\r\n    background-color: #ffffff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* CSS cho tiêu đề trang \"Quản Lý Đơn Hàng\" */\r\n.page-title {\r\n    font-size: 1.8em;\r\n    color: #ffffff;\r\n    background-color: #5e4329; /* Màu nền nâu đậm, nhất quán */\r\n    text-align: center;\r\n    padding: 15px 0;\r\n    margin-bottom: 30px;\r\n    font-weight: 600;\r\n    border-radius: 6px;\r\n}\r\n\r\n/* Kiểu dáng cho đoạn văn bản mô tả ban đầu */\r\n.page-content p {\r\n    font-size: 1.1em;\r\n    color: #555;\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n    line-height: 1.6;\r\n}\r\n\r\n/* ------------------------------------ */\r\n/* CSS cho các thành phần chính (Bảng, Alert) */\r\n/* ------------------------------------ */\r\n\r\n/* Hộp thông báo (alert) */\r\n.alert {\r\n    padding: 12px 20px;\r\n    border: 1px solid transparent;\r\n    border-radius: 5px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease-out;\r\n}\r\n\r\n.alert-success {\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border-color: #c3e6cb;\r\n}\r\n\r\n.alert-info {\r\n    background-color: #d1ecf1;\r\n    color: #0c5460;\r\n    border-color: #bee5eb;\r\n}\r\n\r\n.alert-warning { /* Thêm màu cảnh báo cho trạng thái hủy */\r\n    background-color: #fff3cd;\r\n    color: #664d03;\r\n    border-color: #ffecb5;\r\n}\r\n\r\n/* Ẩn alert khi không hiển thị */\r\n.alert[style*=\"opacity: 0\"] {\r\n  display: none;\r\n}\r\n\r\n/* Bảng đơn hàng */\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);\r\n    background-color: #fff;\r\n    border-radius: 6px;\r\n    overflow: hidden;\r\n}\r\n\r\nth, td {\r\n    padding: 12px 18px;\r\n    text-align: left;\r\n    border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\nth {\r\n    background-color: #f9f9f9;\r\n    color: #555;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    font-size: 0.85em;\r\n}\r\n\r\ntr:hover {\r\n    background-color: #fcfcfc;\r\n}\r\n\r\n/* Các nút hành động trong bảng (Xem, Hủy) */\r\n.actions {\r\n    display: flex;\r\n    gap: 8px;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.actions button {\r\n    padding: 6px 12px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 0.8em;\r\n    font-weight: 500;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n    flex-shrink: 0;\r\n}\r\n\r\n.actions .edit { /* Nút \"Xem\" sẽ dùng màu tương tự \"Sửa\" */\r\n    background-color: #f2c75a;\r\n    color: #333;\r\n}\r\n\r\n.actions .edit:hover {\r\n    background-color: #e0b64d;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n.actions .delete { /* Nút \"Hủy\" sẽ dùng màu tương tự \"Xóa\" */\r\n    background-color: #e84c3d;\r\n    color: white;\r\n}\r\n\r\n.actions .delete:hover {\r\n    background-color: #d13c2c;\r\n    transform: translateY(-1px);\r\n}\r\n\r\n/* CSS cho các thẻ trạng thái (status badges), copy từ DashboardPage */\r\n.status {\r\n    display: inline-block;\r\n    padding: 6px 12px;\r\n    border-radius: 20px; /* Hình viên thuốc */\r\n    font-size: 0.8em;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n}\r\n\r\n.status.done { /* Trạng thái \"Đã giao\" */\r\n    background-color: #28a745; /* Xanh lá cây */\r\n}\r\n\r\n.status.pending { /* Trạng thái \"Đang xử lý\" */\r\n    background-color: #ffc107; /* Vàng */\r\n    color: #333; /* Chữ đen trên nền vàng */\r\n}\r\n\r\n.status.cancelled { /* Trạng thái \"Đã hủy\" */\r\n    background-color: #dc3545; /* Đỏ */\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n    .page-content {\r\n        padding: 20px;\r\n        margin: 20px auto;\r\n    }\r\n\r\n    .page-title {\r\n        font-size: 1.5em;\r\n        padding: 12px 0;\r\n    }\r\n\r\n    .page-content p {\r\n        font-size: 1em;\r\n    }\r\n\r\n    th, td {\r\n        padding: 10px 15px;\r\n        font-size: 0.85em;\r\n    }\r\n\r\n    .actions button {\r\n        padding: 5px 10px;\r\n        font-size: 0.75em;\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}